name: Move Issue to In Progress on Branch Creation

on:
  create:

jobs:
  move-issue:
    runs-on: ubuntu-latest
    if: github.event.ref_type == 'branch'
    steps:
      - name: Extract issue number from branch name
        id: get-issue-number
        run: echo "::set-output name=ISSUE_NUMBER::$(echo ${{ github.ref }} | sed -n 's/.*issue-\([0-9]*\).*/\1/p')"
      
      - name: Move issue to In Progress
        uses: actions/github-script@v4
        with:
          script: |
            const issueNumber = ${{ steps.get-issue-number.outputs.ISSUE_NUMBER }};
            const projectName = "Your Project Name"; // Change this to your project name
            const columnName = "In Progress"; // The column name you want to move the issue to
            const token = "${{ secrets.GITHUB_TOKEN }}";

            const octokit = github.getOctokit(token);

            // Find the project by name
            const { data: projects } = await octokit.rest.projects.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const project = projects.find(project => project.name === projectName);
            if (!project) throw new Error(`Project "${projectName}" not found.`);

            // Find the column by name
            const { data: columns } = await octokit.rest.projects.listColumns({
              project_id: project.id,
            });
            const column = columns.find(column => column.name === columnName);
            if (!column) throw new Error(`Column "${columnName}" not found in project "${projectName}".`);

            // Move the issue to the column
            const { data: issues } = await octokit.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const issue = issues.find(issue => issue.number == issueNumber);
            if (!issue) throw new Error(`Issue number ${issueNumber} not found.`);

            await octokit.rest.projects.createCard({
              column_id: column.id,
              content_id: issue.id,
              content_type: "Issue",
            });